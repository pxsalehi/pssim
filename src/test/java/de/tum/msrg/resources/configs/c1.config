[simulation]
adv_based = true
no_of_nodes = 6
no_of_subs = 6
no_of_advs = 6
no_of_pubs = 10
; publication interval is in milliseconds
pub_interval = 1000
; when to start publishing (each node will send its first pub at this time)
start_publish_time = 2
max_simulation_time = 500000
apply_link_congestion = true
apply_node_congestion = false
; pub rate sampling interval
rate_sample_interval = 1000
; comm monitor run interval
comm_monitor_run_interval = 1000

[gossip]
min_gossip_latency = 10
max_gossip_latency = 80
fault_detection = true
subs_max_size = 1000
unsubs_max_size = 1000
events_max_size = 10000
event_ids_max_size = 10000
retrieves_max_size = 1000
rounds_to_wait_before_retrieve = 6
run_interval = 2000
view_size = 6
fanout = 3
gossip_per_topic = true
allow_midpath_switch = true


[network]
; for random generator
seed = 274994310

[workload]
no_of_classes = 4
no_of_attributes = 3
attribute_min_value = 0
attribute_max_value = 1000
class_popularity_dist = zipf
zipf_exponent = 0.7
; number between 0-100; 0 -> pref class never selected; 100 -> pref class always selected
pref_class_bias = 80
pref_class_same	 = true
; allowed values: UNIFORM, ZIPF
attribute_value_dist = ZIPF
attribute_std_dev_factor = 2
; allowed values: GAUSIAN, UNIFORM
sub_over_nodes_dist = UNIFORM
sub_over_nodes_std_dev_factor = 2
adv_over_nodes_dist = UNIFORM
adv_over_nodes_std_dev_factor = 2
pub_over_nodes_dist = UNIFORM
pub_over_nodes_std_dev_factor = 2
; whether only leaf nodes act as client (LEAVES) or all nodes (ALL) or a specified list of ids(LIST)
pub_nodes = ALL
pub_nodes_list = 11,13,6
sub_nodes = ALL
sub_nodes_list = 11,13,6
load_faults = false
